name: Deploy to AWS Elastic Beanstalk

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2  # Ajuste para a sua regiÃ£o

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Docker image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: nome_do_repositorio
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Create Dockerrun.aws.json
      run: |
        echo '{
          "AWSEBDockerrunVersion": "1",
          "Image": {
            "Name": "$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG",
            "Update": "true"
          },
          "Ports": [
            {
              "ContainerPort": "80"
            }
          ]
        }' > Dockerrun.aws.json

    - name: Install AWS Elastic Beanstalk CLI
      run: |
        pip install awsebcli

    - name: Initialize Elastic Beanstalk Directory
      run: |
        eb init nome_da_aplicacao -r us-west-2 -p docker

    - name: Deploy to AWS Elastic Beanstalk
      run: |
        # If the environment doesn't exist, create it. Otherwise, deploy to the existing environment.
        eb create nome_do_ambiente || eb deploy
